import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import confusion_matrix, classification_report, accuracy_score

# Load the Zoo dataset
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/zoo/zoo.data"
column_names = ['animal_name', 'hair', 'feathers', 'eggs', 'milk', 'airborne',
                'aquatic', 'predator', 'toothed', 'backbone', 'breathes',
                'venomous', 'fins', 'legs', 'tail', 'domestic', 'catsize', 'type']

data = pd.read_csv(url, names=column_names)

data.head()

# Drop the animal name
X = data.drop(['animal_name', 'type'], axis=1)
y = data['type']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train the Decision Tree Classifier
clf = DecisionTreeClassifier(criterion='entropy', random_state=42)
clf.fit(X_train, y_train)

# Make predictions
y_pred = clf.predict(X_test)

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:\n", cm)

# Accuracy
print(accuracy_score(y_test, y_pred))

# Classification Report
report = classification_report(y_test, y_pred, digits=2)
print("\nClassification Report:\n", report)

# Plotting the tree
from sklearn.tree import plot_tree
import matplotlib.pyplot as plt

plt.figure(figsize=(20,10))
plot_tree(clf, feature_names=X.columns, class_names=[str(i) for i in range(1,8)], filled=True)
plt.title("Decision Tree for Zoo Dataset (Multi-Class)")
plt.show()
